#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FILENAME "magazzino.txt"
#define MAX_LEN 100

// Struttura base per ogni ricambio
typedef struct Ricambio {
    char nome[MAX_LEN];
    char codice[MAX_LEN];
    int quantita;
    char scaffalatura[MAX_LEN];
} Ricambio;

int main() {
    menu();  // Avvia il menu per gestire il magazzino
    return 0;
}
void menu() {
    int scelta = 0;
    while (scelta != 6) {
        printf("\n--- GESTIONALE MAGAZZINO AUTOFFICINA ---\n");
        printf("1. Ricerca ricambio\n");
        printf("2. Aggiungi quantita' ricambio\n");
        printf("3. Decurtare quantita' ricambio\n");
        printf("4. Visualizza tutti i ricambi ordinati per scaffalatura\n");
        printf("5. Visualizza tutti i ricambi in ordine alfabetico per nome\n");
        printf("6. Esci\n");
        printf("Scelta: ");
        scanf("%d", &scelta);
        getchar();

        switch (scelta) {
            case 1:
                ricercaRicambio();
                break;
            case 2:
                aggiungiQuantita();
                break;
            case 3:
                decurtaQuantita();
                break;
            case 4:
                stampaRicambiOrdinati();
                break;
            case 5:
                stampaRicambiAlfabetici();
                break;
            case 6:
                printf("Uscita dal programma.\n");
                break;
            default:
                printf("Scelta non valida.\n");
        }
    }
}
//1
void ricercaRicambio() {
    Ricambio *ricambi = NULL;          //ricambi   un puntatore a una struttura di tipo Ricambio
    int count = caricaRicambi(&ricambi);


//funzione da completare (void ricerca ricambio)

//2
int caricaRicambi(Ricambio **ricambi) {       //carica ricambi nella malloc
    int count = contaRigheFile(FILENAME);
    FILE *file = fopen(FILENAME, "r");

    if (count == 0 || file==NULL) return 0;

    *ricambi = malloc(count * sizeof(Ricambio));
    if (*ricambi == NULL) {
        printf("Errore allocazione memoria.\n");
        exit(1);
    }
//il ciclo for riempie un arrey dinamico precedentemente creato (malloc)
    for (int i = 0; i < count; i++) {
        fscanf(file, "%99[^;];%99[^;];%d;%99[^\n]\n",  //99[^;] sta ad indicare che legge al massimo 99 caratteri tranne ;
               (*ricambi)[i].nome,
               (*ricambi)[i].codice,
               &(*ricambi)[i].quantita,     //uso & perch    un intero
               (*ricambi)[i].scaffalatura);
    }

    fclose(file);
    return count;
}



//3
int contaRigheFile(const char *filename) {
    FILE *file = fopen(filename, "r");
    int righe = 0;
    char ch;

    if (file==NULL)
        return 0;

    while ((ch = fgetc(file)) != EOF) {
        if (ch == '\n')
            righe++;
    }

    fclose(file);
    return righe;
}
